definitions:
  handlers.Bid:
    properties:
      comments:
        type: string
      contractor_id:
        type: string
      delivery_time:
        type: integer
      id:
        type: string
      price:
        type: number
      status:
        type: string
      tender_id:
        type: string
    type: object
  handlers.CreateBidRequest:
    properties:
      comments:
        type: string
      delivery_time:
        type: integer
      price:
        type: number
    type: object
  handlers.CreateTenderRequest:
    properties:
      attachment:
        type: string
      budget:
        type: number
      deadline:
        type: string
      description:
        type: string
      title:
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  handlers.UpdateTenderStatusRequest:
    properties:
      status:
        type: string
    type: object
  models.Tender:
    properties:
      attachment:
        type: string
      budget:
        type: number
      client_id:
        type: string
      created_at:
        type: string
      deadline:
        type: string
      description:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/models.TenderStatus'
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.TenderStatus:
    enum:
    - open
    - closed
    - awarded
    type: string
    x-enum-varnames:
    - TenderStatusOpen
    - TenderStatusClosed
    - TenderStatusAwarded
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      role:
        $ref: '#/definitions/models.UserRole'
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.UserRole:
    enum:
    - client
    - contractor
    type: string
    x-enum-varnames:
    - RoleClient
    - RoleContractor
  service.AuthResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  service.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  service.RegisterInput:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      role:
        allOf:
        - $ref: '#/definitions/models.UserRole'
        enum:
        - client
        - contractor
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - role
    - username
    type: object
info:
  contact: {}
  description: Backend
  title: hackathon
  version: "1.0"
paths:
  /api/client/tenders:
    get:
      consumes:
      - application/json
      description: Retrieves a list of tenders filtered by status and search query.
      parameters:
      - description: Filter tenders by status
        in: query
        name: status
        type: string
      - description: Search tenders by keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of tenders
          schema:
            items:
              items:
                $ref: '#/definitions/models.Tender'
              type: array
            type: array
        "500":
          description: Internal Server Error
          schema:
            items:
              $ref: '#/definitions/models.Tender'
            type: array
      security:
      - BearerAuth: []
      summary: List Tenders
      tags:
      - tenders
    post:
      consumes:
      - application/json
      description: Create a new tender with the provided details
      parameters:
      - description: Tender details
        in: body
        name: tender
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateTenderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Tender'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new tender
      tags:
      - tenders
  /api/client/tenders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a tender by its ID
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tender deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a tender
      tags:
      - tenders
    get:
      consumes:
      - application/json
      description: Retrieve a tender by its ID
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tender'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a tender by ID
      tags:
      - tenders
    put:
      consumes:
      - application/json
      description: Update the status of a tender by its ID
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: string
      - description: New status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateTenderStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tender'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update the status of a tender
      tags:
      - tenders
  /api/client/tenders/{tender_id}/award/{bid_id}:
    post:
      consumes:
      - application/json
      description: This endpoint allows a client to award a specific bid for a specified
        tender.
      parameters:
      - description: Tender ID
        in: path
        name: tender_id
        required: true
        type: string
      - description: Bid ID
        in: path
        name: bid_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully awarded bid
          schema:
            $ref: '#/definitions/handlers.Bid'
        "400":
          description: Invalid tender ID or bid ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Award a bid
      tags:
      - bids
  /api/client/tenders/{tender_id}/bids:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves a list of bids made by a specific client
        for a specified tender.
      parameters:
      - description: Tender ID
        in: path
        name: tender_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of bids
          schema:
            items:
              $ref: '#/definitions/handlers.Bid'
            type: array
        "400":
          description: Invalid tender ID or client ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get bids by client ID
      tags:
      - bids
  /api/client/tenders/filter:
    get:
      consumes:
      - application/json
      description: Retrieves a list of tenders filtered by various criteria.
      parameters:
      - description: Filter tenders by status
        in: query
        name: status
        type: string
      - description: Search tenders by keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of tenders
          schema:
            items:
              $ref: '#/definitions/models.Tender'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List Tenders with Filters
      tags:
      - tenders
  /api/contractor/bids:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves a list of bids made by a specific contractor.
      parameters:
      - description: Contractor ID
        in: path
        name: contractor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of bids
          schema:
            items:
              $ref: '#/definitions/handlers.Bid'
            type: array
        "400":
          description: Invalid contractor ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get bids by contractor ID
      tags:
      - bids
  /api/contractor/bids/{bid_id}:
    delete:
      consumes:
      - application/json
      description: This endpoint allows a contractor to delete a specific bid they
        made.
      parameters:
      - description: Bid ID
        in: path
        name: bid_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted bid
          schema:
            type: string
        "400":
          description: Invalid bid ID or contractor ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a bid by contractor ID
      tags:
      - bids
  /api/contractor/tenders/{tender_id}/bid:
    post:
      consumes:
      - application/json
      description: This endpoint allows a contractor to create a new bid for a specified
        tender. The contractor must provide the bid details in the request body.
      parameters:
      - description: Tender ID
        in: path
        name: tender_id
        required: true
        type: string
      - description: Bid details
        in: body
        name: bid
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateBidRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created bid
          schema:
            $ref: '#/definitions/handlers.Bid'
        "400":
          description: Invalid tender ID or bad request body
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new bid
      tags:
      - bids
  /api/contractor/tenders/{tender_id}/bids:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves a list of bids for a specified tender.
        The list can be filtered and sorted using query parameters.
      parameters:
      - description: Tender ID
        in: path
        name: tender_id
        required: true
        type: string
      - description: Filter by bid status
        in: query
        name: status
        type: string
      - description: Search bids by comments
        in: query
        name: search
        type: string
      - description: Minimum bid price
        in: query
        name: min_price
        type: number
      - description: Maximum bid price
        in: query
        name: max_price
        type: number
      - description: Minimum delivery time
        in: query
        name: min_delivery_time
        type: integer
      - description: Maximum delivery time
        in: query
        name: max_delivery_time
        type: integer
      - description: Sort by field
        in: query
        name: sort_by
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of bids
          schema:
            items:
              $ref: '#/definitions/handlers.Bid'
            type: array
        "400":
          description: Invalid tender ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List bids for a tender
      tags:
      - bids
  /login:
    post:
      consumes:
      - application/json
      description: Login a user with the provided credentials
      parameters:
      - description: Login Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/service.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: Register Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/service.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
